{
  "tests": [
    {
      "name": "found match",
      "selector": "$[?match(@.a, 'a.*')]",
      "document": [
        {
          "a": "ab"
        }
      ],
      "result": [
        {
          "a": "ab"
        }
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]"
      ]
    },
    {
      "name": "double quotes",
      "selector": "$[?match(@.a, \"a.*\")]",
      "document": [
        {
          "a": "ab"
        }
      ],
      "result": [
        {
          "a": "ab"
        }
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]"
      ]
    },
    {
      "name": "regex from the document",
      "selector": "$.values[?match(@, $.regex)]",
      "document": {
        "regex": "b.?b",
        "values": [
          "abc",
          "bcd",
          "bab",
          "bba",
          "bbab",
          "b",
          true,
          [],
          {}
        ]
      },
      "result": [
        "bab"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$['values'][2]"
      ]
    },
    {
      "name": "don't select match",
      "selector": "$[?!match(@.a, 'a.*')]",
      "document": [
        {
          "a": "ab"
        }
      ],
      "result": [],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": []
    },
    {
      "name": "not a match",
      "selector": "$[?match(@.a, 'a.*')]",
      "document": [
        {
          "a": "bc"
        }
      ],
      "result": [],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": []
    },
    {
      "name": "select non-match",
      "selector": "$[?!match(@.a, 'a.*')]",
      "document": [
        {
          "a": "bc"
        }
      ],
      "result": [
        {
          "a": "bc"
        }
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]"
      ]
    },
    {
      "name": "non-string first arg",
      "selector": "$[?match(1, 'a.*')]",
      "document": [
        {
          "a": "bc"
        }
      ],
      "result": [],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": []
    },
    {
      "name": "non-string second arg",
      "selector": "$[?match(@.a, 1)]",
      "document": [
        {
          "a": "bc"
        }
      ],
      "result": [],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": []
    },
    {
      "name": "filter, match function, unicode char class, uppercase",
      "selector": "$[?match(@, '\\\\p{Lu}')]",
      "document": [
        "–∂",
        "–ñ",
        "1",
        "–∂–ñ",
        true,
        [],
        {}
      ],
      "result": [
        "–ñ"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[1]"
      ]
    },
    {
      "name": "filter, match function, unicode char class negated, uppercase",
      "selector": "$[?match(@, '\\\\P{Lu}')]",
      "document": [
        "–∂",
        "–ñ",
        "1",
        true,
        [],
        {}
      ],
      "result": [
        "–∂",
        "1"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]",
        "$[2]"
      ]
    },
    {
      "name": "filter, match function, unicode, surrogate pair",
      "selector": "$[?match(@, 'a.b')]",
      "document": [
        "aêÑÅb",
        "ab",
        "1",
        true,
        [],
        {}
      ],
      "result": [
        "aêÑÅb"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]"
      ]
    },
    {
      "name": "dot matcher on \\u2028",
      "selector": "$[?match(@, '.')]",
      "document": [
        "‚Ä®",
        "\r",
        "\n",
        true,
        [],
        {}
      ],
      "result": [
        "‚Ä®"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]"
      ]
    },
    {
      "name": "dot matcher on \\u2029",
      "selector": "$[?match(@, '.')]",
      "document": [
        "‚Ä©",
        "\r",
        "\n",
        true,
        [],
        {}
      ],
      "result": [
        "‚Ä©"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]"
      ]
    },
    {
      "name": "result cannot be compared",
      "selector": "$[?match(@.a, 'a.*')==true]",
      "invalid_selector": true,
      "tags": [
        "function",
        "match"
      ]
    },
    {
      "name": "too few params",
      "selector": "$[?match(@.a)==1]",
      "invalid_selector": true,
      "tags": [
        "function",
        "match"
      ]
    },
    {
      "name": "too many params",
      "selector": "$[?match(@.a,@.b,@.c)==1]",
      "invalid_selector": true,
      "tags": [
        "function",
        "match"
      ]
    },
    {
      "name": "arg is a function expression",
      "selector": "$.values[?match(@.a, value($..['regex']))]",
      "document": {
        "regex": "a.*",
        "values": [
          {
            "a": "ab"
          },
          {
            "a": "ba"
          }
        ]
      },
      "result": [
        {
          "a": "ab"
        }
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$['values'][0]"
      ]
    },
    {
      "name": "dot in character class",
      "selector": "$[?match(@, 'a[.b]c')]",
      "document": [
        "abc",
        "a.c",
        "axc"
      ],
      "result": [
        "abc",
        "a.c"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]",
        "$[1]"
      ]
    },
    {
      "name": "escaped dot",
      "selector": "$[?match(@, 'a\\\\.c')]",
      "document": [
        "abc",
        "a.c",
        "axc"
      ],
      "result": [
        "a.c"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[1]"
      ]
    },
    {
      "name": "escaped backslash before dot",
      "selector": "$[?match(@, 'a\\\\\\\\.c')]",
      "document": [
        "abc",
        "a.c",
        "axc",
        "a\\‚Ä®c"
      ],
      "result": [
        "a\\‚Ä®c"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[3]"
      ]
    },
    {
      "name": "escaped left square bracket",
      "selector": "$[?match(@, 'a\\\\[.c')]",
      "document": [
        "abc",
        "a.c",
        "a[‚Ä®c"
      ],
      "result": [
        "a[‚Ä®c"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[2]"
      ]
    },
    {
      "name": "escaped right square bracket",
      "selector": "$[?match(@, 'a[\\\\].]c')]",
      "document": [
        "abc",
        "a.c",
        "a‚Ä®c",
        "a]c"
      ],
      "result": [
        "a.c",
        "a]c"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[1]",
        "$[3]"
      ]
    },
    {
      "name": "explicit caret",
      "selector": "$[?match(@, '^ab.*')]",
      "document": [
        "abc",
        "axc",
        "ab",
        "xab"
      ],
      "result": [
        "abc",
        "ab"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]",
        "$[2]"
      ]
    },
    {
      "name": "explicit dollar",
      "selector": "$[?match(@, '.*bc$')]",
      "document": [
        "abc",
        "axc",
        "ab",
        "abcx"
      ],
      "result": [
        "abc"
      ],
      "tags": [
        "function",
        "match"
      ],
      "result_paths": [
        "$[0]"
      ]
    }
  ]
}